----   calling  f-------------
 A[:,:,0] = 
[[1 2]
 [3 4]]
 A[:,:,1] = 
[[10 20]
 [30 40]]
 A(range(),range(),0) = 
[[1,2]
 [3,4]]
 A(range(),range(),1) = 
[[10,20]
 [30,40]]
 memory_layout (permutation of indices) = (2 1 0)
 strides = (6 3 1)
 is_contiguous = 1
----   END calling  f-------------
----   calling  f-------------
 A[:,:,0] = 
[[1 3]
 [2 4]]
 A[:,:,1] = 
[[20 60]
 [40 80]]
 A(range(),range(),0) = 
[[1,3]
 [2,4]]
 A(range(),range(),1) = 
[[20,60]
 [40,80]]
 memory_layout (permutation of indices) = (2 0 1)
 strides = (3 6 1)
 is_contiguous = 1
----   END calling  f-------------
 ------------ F --------------
----   calling  f-------------
 A[:,:,0] = 
[[1 2]
 [3 4]]
 A[:,:,1] = 
[[10 20]
 [30 40]]
 A(range(),range(),0) = 
[[1,2]
 [3,4]]
 A(range(),range(),1) = 
[[10,20]
 [30,40]]
 memory_layout (permutation of indices) = (0 1 2)
 strides = (1 2 4)
 is_contiguous = 1
----   END calling  f-------------
----   calling  f-------------
 A[:,:,0] = 
[[1 3]
 [2 4]]
 A[:,:,1] = 
[[20 60]
 [40 80]]
 A(range(),range(),0) = 
[[1,3]
 [2,4]]
 A(range(),range(),1) = 
[[20,60]
 [40,80]]
 memory_layout (permutation of indices) = (1 0 2)
 strides = (2 1 4)
 is_contiguous = 1
----   END calling  f-------------
----   calling  f-------------
 A[:,:,0] = 
[[  1  40 100]
 [  2  80 200]]
 A[:,:,1] = 
[[  3 120 300]
 [  4 160 400]]
 A(range(),range(),0) = 
[[1,40,100]
 [2,80,200]]
 A(range(),range(),1) = 
[[3,120,300]
 [4,160,400]]
 memory_layout (permutation of indices) = (2 0 1)
 strides = (2 4 1)
 is_contiguous = 1
----   END calling  f-------------
----   calling  f-------------
 A[:,:,0] = 
[[  1   6]
 [ 40 240]
 [100 600]]
 A[:,:,1] = 
[[  2   8]
 [ 80 320]
 [200 800]]
 A(range(),range(),0) = 
[[1,6]
 [40,240]
 [100,600]]
 A(range(),range(),1) = 
[[2,8]
 [80,320]
 [200,800]]
 memory_layout (permutation of indices) = (1 2 0)
 strides = (4 1 2)
 is_contiguous = 1
----   END calling  f-------------
